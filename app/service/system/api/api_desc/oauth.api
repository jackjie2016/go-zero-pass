syntax = "v1"

info(
    title: "Oauth management"
    desc: "Oauth management is used to support oauth 2.0 for log in from different website"
    author: "Ryan Su"
    email: "yuansu.china.work@gmail.com"
    version: "v1.0"
)

import "base.api"

type (
    // The response data of oauth provider information | 提供者信息
    // swagger:response ProviderInfo
    ProviderInfo {
        // ID
        Id            uint64 `json:"id"`

        CreateAt      int64  `json:"createAt"`

        // Provider name | 提供商名字
        Name          string `json:"name"`

        // Client ID | 客户端ID
        ClientID      string `json:"clientID"`

        // Client secret | 客户端密码
        ClientSecret   string `json:"clientSecret"`

        // Redirect URL | 跳转URL
        RedirectURL      string `json:"redirectURL"`

        // Scopes | 范围
        Scopes      string `json:"scopes"`

        // Auth URL | 鉴权URL
        AuthURL     string `json:"authURL"`

        // Token URL | 获取 Token 的网址
        TokenURL    string `json:"tokenURL"`

        // Auth Style is specifies how the endpoint wants the client ID & client secret sent. The zero value means to auto-detect. | 鉴权方式, 0 表示自动检测
        AuthStyle    int `json:"authStyle"`

        // Get User information URL | 获取用户信息地址
        InfoURL   string `json:"infoURL"`

    }

    // Create or update provider information request | 创建或更新提供商信息
    // swagger:model CreateOrUpdateProviderReq
    CreateOrUpdateProviderReq {
        // ID
        // Required: true
        Id            uint64 `json:"id" validate:"number"`

        // Create date | 创建日期
        // Required: true
        CreateAt      int64  `json:"createAt" validate:"number"`

        // Provider name | 提供商名字
        // Required: true
        // Min length: 1
        // Max length: 50
        Name          string `json:"name" validate:"min=1,max=50"`

        // Client ID | 客户端ID
        // Required: true
        // Max length: 100
        ClientID      string `json:"clientID" validate:"max=100"`

        // Client secret | 客户端密码
        // Require: true
        // Min length: 1
        // Max length: 100
        ClientSecret   string `json:"clientSecret" validate:"min=1,max=100"`

        // Redirect URL | 跳转URL
        // Required: true
        // Max length: 200
        RedirectURL      string `json:"redirectURL" validate:"max=200"`

        // Scopes | 范围
        // Required: true
        // Max length: 200
        Scopes      string `json:"scopes" validate:"max=200"`

        // Auth URL | 鉴权URL
        // Required: true
        // Max length: 200
        AuthURL      string `json:"authURL" validate:"max=200"`

        // Token URL | 获取 Token 的网址
        // Required: true
        // Max length: 200
        TokenURL      string `json:"tokenURL" validate:"max=200"`

        // Auth Style is specifies how the endpoint wants the client ID & client secret sent. The zero value means to auto-detect. | 鉴权方式, 0 表示自动检测
        // 0 auto detect 1 client ID and client secret 2 username and password
        // Required: true
        // Example: 0
        AuthStyle    int `json:"authStyle" validate:"number"`

        // Get User information URL | 获取用户信息地址
        // Required: true
        // Max length: 200
        InfoURL   string `json:"infoURL" validate:"max=200"`
    }

    // The response data of provider list | 提供商列表数据
    // swagger:response ProviderListResp
    ProviderListResp {
        // The total number of data | 数据总数
        Total uint64 `json:"total"`

        // The provider list data | 提供商列表数据
        // in: body
        Data  []ProviderInfo  `json:"data"`
    }

    // Oauth log in request | Oauth 登录请求
    // swagger:model OauthLoginReq
    OauthLoginReq {
        // State code to avoid hack | 状态码，请求前后相同避免安全问题
        // Required: true
        // Max Length: 30
        State string `json:"state" validate:"max=30"`

        // Provider name | 提供商名字
        // Required: true
        // Max Length: 40
        // Example: google
        Provider string `json:"provider" validate:"max=40"`
    }

    // Redirect response | 跳转网址
    // swagger:response RedirectResp
    RedirectResp {
        URL string `json:"URL"`
    }

    // The oauth callback response data | Oauth回调数据
    // swagger:response CallbackResp
    CallbackResp {
        // User's UUID | 用户的UUID
        UserId       string          `json:"userId"`

        // User's role information| 用户的角色信息
        // in: body
        Role         RoleInfoSimple  `json:"role"`

        // Token for authorization | 验证身份的token
        Token        string          `json:"token"`

        // Expire timestamp | 过期时间戳
        Expire       uint64          `json:"expire"`
    }
)

@server (
    group: oauth
)

service core {
    // swagger:route POST /oauth/login oauth oauthLogin
    // Oauth log in | Oauth 登录
    // Parameters:
    //  + name: body
    //    require: true
    //    in: body
    //    type: OauthLoginReq
    // Responses:
    //   200: RedirectResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler oauthLogin
    post /oauth/login (OauthLoginReq) returns (RedirectResp)

    // swagger:route GET /oauth/login/callback oauth oauthCallback
    // Oauth log in callback route | Oauth 登录返回调接口
    // Responses:
    //   200: CallbackResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler oauthCallback
    get /oauth/login/callback returns (CallbackResp)
}

@server(
    jwt: Auth
    group: oauth
    middleware: Authority
)

service core {
    // swagger:route POST /oauth/provider oauth createOrUpdateProvider
    // Create or update Provider information | 创建或更新提供商
    // Parameters:
    //  + name: body
    //    require: true
    //    in: body
    //    type: CreateOrUpdateProviderReq
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler createOrUpdateProvider
    post /oauth/provider (CreateOrUpdateProviderReq) returns (SimpleMsg)

    // swagger:route DELETE /oauth/provider oauth deleteProvider
    // Delete provider information | 删除提供商信息
    // Parameters:
    //  + name: body
    //    require: true
    //    in: body
    //    type: IDReq
    // Responses:
    //   200: SimpleMsg
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler deleteProvider
    delete /oauth/provider (IDReq) returns (SimpleMsg)

    // swagger:route POST /oauth/provider/list oauth getProviderList
    // Get provider list | 获取提供商列表
    // Parameters:
    //  + name: body
    //    require: true
    //    in: body
    //    type: PageInfo
    // Responses:
    //   200: ProviderListResp
    //   401: SimpleMsg
    //   500: SimpleMsg
    @handler getProviderList
    post /oauth/provider/list (PageInfo) returns (ProviderListResp)
}
